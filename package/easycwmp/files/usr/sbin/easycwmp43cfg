#!/bin/sh
#
# Configure and start easycwmp based on contents of DHCP Option 43.
#

__parse_uci() {
	local url="$(uci get easycwmp.@acs[0].url)"
	local username="$(uci get easycwmp.@acs[0].username)"
	local password="$(uci get easycwmp.@acs[0].password)"

	if [ -z "${username}" ] && [ -z "${password}" ]; then
		echo "${url}"
	elif [ ! -z "${username}" ] && [ ! -z "${password}" ]; then
		echo "${url} ${username} ${password}"
	fi
}

__parse_url() {
        local count=$(($(echo $1 | grep -o " " | wc -l)+1))

        # opt43 have auth params
        if [ $count -eq 3 ]; then
                local url="$(echo $1 | cut -d ' ' -f1)"
                local username="$(echo $1 | cut -d ' ' -f2)"
                local password="$(echo $1 | cut -d ' ' -f3)"
		echo "${url} ${username} ${password}"
        # opt43 haven't auth params
        elif [ $count -eq 1 ]; then
                local url=$1
		echo "${url}"
        fi

}

__set_acs() {
        local count=$(($(echo $1 | grep -o " " | wc -l)+1))

        # opt43 have auth params
        if [ $count -eq 3 ]; then
                local url="$(echo $1 | cut -d ' ' -f1)"
                local username="$(echo $1 | cut -d ' ' -f2)"
                local password="$(echo $1 | cut -d ' ' -f3)"
        # opt43 haven't auth params
        elif [ $count -eq 1 ]; then
                local url=$1
                local username=""
                local password=""
        fi

        uci set easycwmp.@acs[0].url="$url"
        uci set easycwmp.@acs[0].username="$username"
        uci set easycwmp.@acs[0].password="$password"
        uci commit easycwmp

        /etc/init.d/easycwmpd restart
}

opt43="$1"

if echo "$opt43" | cut -c 1-2 | xargs test "0x" = ; then
	opt43=$(echo $opt43 | cut -c3-)
fi

if [ $# -eq 1 ] && echo "$opt43" | grep -q '^[0-9a-zA-Z]\+$'; then
	# This could conseivably be an Option 43 value in hex:

	if echo "$opt43" | cut -c 1-2 | xargs test "01" = ; then
		# This could be Option 43 subcode 1 = TR-069 ACS URL:

  		len=$(echo "$opt43" | cut -c3-4 | sed -e 's/\([0-9A-Fa-f][0-9A-Fa-f]\)/0x\1  /g' | awk '{printf "%d", $1}')
		url=$(echo "$opt43" | cut -c5-  | sed -e 's/\([0-9A-Fa-f][0-9A-Fa-f]\)/0x\1\n/g' | awk '{printf "%c", $1}')

		if [ $len -eq ${#url} ]; then
			# This probably is Option 43 subcode 1 TR-069 ACS:
			cur=$(__parse_uci)
			new=$(__parse_url "$url")

			[ "$new" != "$cur" ] && __set_acs "$new"
		else
			echo "Parse error" 1>&2
			exit 3
		fi
	else
		echo "Parse error 2" 1>&2
		exit 2
	fi
else
	cat << EOF
This is a utility meant to be run e.g. from /etc/udhcpc.user to configure
easycwmp based on the contents of DHCP Option 43.

Usage: easycwmp43cfg <option43value>

    value   Value of DHCP Option 43 in hexadecimal

Example:

  # Configure easycwmp to use the ACS at 'https://acs:1234/with/path':
  easycwmp43cfg 011A68747470733A2F2F6163733A313233342F776974682F70617468

Use http://github.com/carrierwrt/carrierwrt/scripts/dhcp43 to generate
your own DHCP Option 43 values.
EOF
	exit 1
fi

exit 0
